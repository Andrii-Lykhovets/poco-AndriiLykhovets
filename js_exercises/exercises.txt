Ex. 3.1.1 (*) - Print greeting
initialize MAX_LENGTH_OF_NAME 20
1. there is a variable NAME
2. prompt "Please enter your name."
3. Store user input in variable NAME
    3/1 Trim spaces from beginning and end of NAME
4. Take the length of NAME and store it in COUNT
    if COUNT is more than 50
    display "entered name is too long"
    go back to step 2
    else
5. If COUNT is = to 0, go back to step 2
6. Display "Hello, " + NAME + "."

Output: > Hello, .


Ex. 3.1.2 (*) - Add numbers
there are 2 variables
prompt "Enter a number"
prompt "Enter a number"
transform string inputs into numbers
store input in variables
result = n1 + n2
print the result


Ex. 3.1.3 (*) - Which number is bigger?
Declare 2 variables, both numbers. Compare which number is greater Log the output, e.g. "The greater number
of 5 and 10 is 10." Add an output for the else statement, e.g. "The smaller number of 5 and 10 is 5."

1. Introduce variables
a = 10
b = 5

2. Create a function that compares the numbers and prompts the result
compare_numbers_function(number_1, number_2):
    if number_1 > number_2:
        print("The greater number of number_1 and number_2 is number_1")
    else:
        print("The smaller number of number_1 and number_2 is number_2.")

3. Call the function
compare_numbers_function(a, b)


Ex. 3.1.4 (*) - Subtract numbers ca. 45 min
Allow the user to input numbers, subtract the smaller from the bigger number and print the result.

1. Introduce variables through input
a = int(input("Input a number"))
b = int(input("Input a number"))

2. Create a function that compares the numbers, performs subtraction and prompts the result
compare_numbers_function(number_1, number_2):
    if number_1 > number_2:
        print(number_1 - number_2)
    else:
        print(number_2 - number_1)

3. Call the function
compare_numbers_function(a, b)


Ex. 3.1.5 (*) - Combine
Combine Ex. 3.1.2 and 3.1.4 into one program.
The program should ask the user if they want to add or subtract two numbers. Then the program should ask
for the two numbers and print the result.

1. Introduce variables
action = input("Do you want to add or subtract two numbers?")

2. Introduce more variables
a = int(input("Input the 1st number"))
b = int(input("Input the 2nd number"))

3. Define a function
perform_action_function(number_1, number_2):
    if action = "add":
        result = number_1 + number_2
        print(result)
    elif action = "subtract":
        result = number_2 - number_1
        print(result)

4  Call the function
perform_action_function(number_1, number_2)



3.2 Intermediate Exercises

! Ex. 3.2.1 (**) - FizzBuzz
Write a program that prints the numbers from 1 to 100. But for multiples of three print "Fizz" instead of the
number and for the multiples of five print "Buzz". For numbers which are multiples of both three and five print
"FizzBuzz".

1. Generate a list of numbers
numbers = [1, 2, 3, ... 100]
2. Iterate through the list and output "Fizz" for multiples of three or "Buzz" for the multiples of five
for multiple in numbers:
    if multiple % 3 == 0:
        print("Fizz")
    elif multiple % 5 == 0:
        print("Buzz")
    elif multiple % 3 and 5 == 0:
        print("FizzBuzz")


Ex. 3.2.2 (**) ca. 45 min
Write a program that asks the user for a date. Find the day of the year for the given date. For example,
January 1st would be 1, and December 31st is 365.
a) Do not include leap years.
b) Include leap years. Check the rules for leap years on the internet, and implement them in your program.

B: 0. Check if the year is a leap one or not:
-without leap year function:
    total_days = (sum of the days in the array until that month) + day
    return total_days

-Is it a leap year function
    if (year % 4 == 0 and year % 100 != 0) OR (year % 400 == 0):
        return True
    return False

A:
1. Use a data structure (e.g. a list) to store number of month days
days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]

2. Ask the user to input the date separately through variables
    year = int(input(YYYY))
    month = int(input(MM))
    day = int(input(DD))

3. all the days of months + current day - to count what number the day is
Loop the list based on the month and sum the days of previous months + input the day
for each month of the year in the list:
    if input month == *month*:
        days_before = slice the list up to that *month* and sum number of days up
        day_number = days_before + day from input
        print day_number
    elif *all the same for the rest 11 months*




3.3 Advanced Exercises

Ex. 3.3.1 (***) - Sorting algorithms
Write a sort algorithm yourself. (e.g. bubble sort)

range_stop = 5
print('bubble sort loop')
for i in range(range_stop - 1):
    for j in range(0, range_stop - i - 1):
        print(f'i = {i}, j = {j}')

1. introduce the array (e.g. a list)
[1, 4, 2, 3, 5]

2. iterate through the list by comparing 2




















